package complexity;

import java.util.Arrays;

public class Complexity {
    public static void main(String[] args) {
        int[] arr = {2, 3, 5, 7, 11, 13, 17, 19};

            // кол-во операций не завсити от длины массива
        double mid = (arr[0] + arr[arr.length-1]) / 2;
        // вычисление среднего значения
            // кол-во действий
            // 1. Взять 0-й элемент
            // 2. Вычислить arr.length
            // 3. Взять последний элемент
            // 4. Складываем элементы
            // 5. Разделить пополам (на 2)
            // Это константная сложность O(5)


            // Сложение эл-ов массива
        int sum = 0;
        for (int i = 0; i < arr.length; i++) {
            sum += arr[i];
        }
        // При увеличении кол-ва эл-ов массива кол-во операций растет прямо пропорционально (линейно)
        // Это называется линейная сложность - O(n)

        // Поиск элемента массива с помощью BinarySearch

        int index = Arrays.binarySearch(arr,10);

        // При 8 элементах - 3 шага/операции
        // При 16 элеметнах - 4 операции
        // при 1024 элементах - 10 операций
        // при 2048 элементах - 11 операций

        // сортировка массива
        for (int i = 0; i < arr.length; i++) {
            for (int j = 0; j < arr.length; j++) {
                if(arr[j] > arr[j+1]) {
                    int t = arr[j];
                    arr[j] = arr[j+1];
                    arr[j+1] = t;
                }
            }
        }
    }
}
